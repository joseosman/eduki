<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "libros_prestamos".
 *
 * @property string $id
 * @property string $libro_id
 * @property string $estudiante_id
 * @property string $profesor_id
 * @property string $administrativo_id
 * @property string $fecha_retiro
 * @property string $fecha_plazo
 * @property string $fecha_retorno
 * @property string $multa
 * @property integer $devuelto
 * @property integer $multa_pagada
 * @property integer $deleted
 * @property integer $created_at
 * @property integer $created_by
 * @property integer $updated_at
 * @property integer $updated_by
 *
 * @property \backend\models\Administrativos $administrativo
 * @property \backend\models\Libros $libro
 * @property \backend\models\Estudiantes $estudiante
 * @property \backend\models\Profesores $profesor
 * @property string $aliasModel
 */
abstract class LibrosPrestamos extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'libros_prestamos';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['libro_id', 'fecha_retiro', 'fecha_plazo', 'fecha_retorno'], 'required'],
            [['libro_id', 'estudiante_id', 'profesor_id', 'administrativo_id', 'devuelto', 'multa_pagada', 'deleted'], 'integer'],
            [['fecha_retiro', 'fecha_plazo', 'fecha_retorno'], 'safe'],
            [['multa'], 'number'],
            [['administrativo_id'], 'exist', 'skipOnError' => true, 'targetClass' => Administrativos::className(), 'targetAttribute' => ['administrativo_id' => 'id']],
            [['libro_id'], 'exist', 'skipOnError' => true, 'targetClass' => Libros::className(), 'targetAttribute' => ['libro_id' => 'id']],
            [['estudiante_id'], 'exist', 'skipOnError' => true, 'targetClass' => Estudiantes::className(), 'targetAttribute' => ['estudiante_id' => 'id']],
            [['profesor_id'], 'exist', 'skipOnError' => true, 'targetClass' => Profesores::className(), 'targetAttribute' => ['profesor_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('backend', 'ID'),
            'libro_id' => Yii::t('backend', 'Libro ID'),
            'estudiante_id' => Yii::t('backend', 'Estudiante ID'),
            'profesor_id' => Yii::t('backend', 'Profesor ID'),
            'administrativo_id' => Yii::t('backend', 'Administrativo ID'),
            'fecha_retiro' => Yii::t('backend', 'Fecha Retiro'),
            'fecha_plazo' => Yii::t('backend', 'Fecha Plazo'),
            'fecha_retorno' => Yii::t('backend', 'Fecha Retorno'),
            'multa' => Yii::t('backend', 'Multa'),
            'devuelto' => Yii::t('backend', 'Devuelto'),
            'multa_pagada' => Yii::t('backend', 'Multa Pagada'),
            'created_at' => Yii::t('backend', 'Created At'),
            'created_by' => Yii::t('backend', 'Created By'),
            'updated_at' => Yii::t('backend', 'Updated At'),
            'updated_by' => Yii::t('backend', 'Updated By'),
            'deleted' => Yii::t('backend', 'Deleted'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAdministrativo()
    {
        return $this->hasOne(\backend\models\Administrativos::className(), ['id' => 'administrativo_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLibro()
    {
        return $this->hasOne(\backend\models\Libros::className(), ['id' => 'libro_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEstudiante()
    {
        return $this->hasOne(\backend\models\Estudiantes::className(), ['id' => 'estudiante_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProfesor()
    {
        return $this->hasOne(\backend\models\Profesores::className(), ['id' => 'profesor_id']);
    }




}

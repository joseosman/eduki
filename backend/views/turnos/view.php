<?php

use dmstr\helpers\Html;
use yii\helpers\Url;
use yii\grid\GridView;
use yii\widgets\DetailView;
use yii\widgets\Pjax;
use dmstr\bootstrap\Tabs;

/**
* @var yii\web\View $this
* @var backend\models\Turnos $model
*/
$copyParams = $model->attributes;

$this->title = Yii::t('backend', 'Turnos');
$this->params['breadcrumbs'][] = ['label' => Yii::t('backend', 'Turnos'), 'url' => ['index']];
$this->params['breadcrumbs'][] = ['label' => (string)$model->id, 'url' => ['view', 'id' => $model->id]];
$this->params['breadcrumbs'][] = Yii::t('backend', 'View');
?>
<div class="giiant-crud turnos-view">

    <!-- flash message -->
    <?php if (\Yii::$app->session->getFlash('deleteError') !== null) : ?>
        <span class="alert alert-info alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span></button>
            <?= \Yii::$app->session->getFlash('deleteError') ?>
        </span>
    <?php endif; ?>

    <h1>
        <?= Yii::t('backend', 'Turnos') ?>        <small>
            <?= $model->id ?>        </small>
    </h1>


    <div class="clearfix crud-navigation">

        <!-- menu buttons -->
        <div class='pull-left'>
            <?= Html::a(
            '<span class="glyphicon glyphicon-pencil"></span> ' . Yii::t('backend', 'Edit'),
            [ 'update', 'id' => $model->id],
            ['class' => 'btn btn-info']) ?>

            <?= Html::a(
            '<span class="glyphicon glyphicon-copy"></span> ' . Yii::t('backend', 'Copy'),
            ['create', 'id' => $model->id, 'Turnos'=>$copyParams],
            ['class' => 'btn btn-success']) ?>

            <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New'),
            ['create'],
            ['class' => 'btn btn-success']) ?>
        </div>

        <div class="pull-right">
            <?= Html::a('<span class="glyphicon glyphicon-list"></span> '
            . Yii::t('backend', 'Full list'), ['index'], ['class'=>'btn btn-default']) ?>
        </div>

    </div>

    <hr />

    <?php $this->beginBlock('backend\models\Turnos'); ?>

    
    <?= DetailView::widget([
    'model' => $model,
    'attributes' => [
            'id',
        'nombre',
    ],
    ]); ?>

    
    <hr/>

    <?= Html::a('<span class="glyphicon glyphicon-trash"></span> ' . Yii::t('backend', 'Delete'), ['delete', 'id' => $model->id],
    [
    'class' => 'btn btn-danger',
    'data-confirm' => '' . Yii::t('backend', 'Are you sure to delete this item?') . '',
    'data-method' => 'post',
    ]); ?>
    <?php $this->endBlock(); ?>


    
<?php $this->beginBlock('Actividades'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Actividades',
            ['actividades/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Actividade',
            ['actividades/create', 'Actividade' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-Actividades', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-Actividades ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getActividades(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-actividades']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'actividades' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'actividades'
],
        'id',
        'nombre',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->nombre, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->fullnameinverted, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_id',
    'value' => function ($model) {
        if ($rel = $model->getTipo()->one()) {
            return Html::a($rel->nombre, ['tipo-actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'bimestre_id',
    'value' => function ($model) {
        if ($rel = $model->getBimestre()->one()) {
            return Html::a($rel->nombre, ['bimestres/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('AdjuntosActividades'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Adjuntos Actividades',
            ['adjuntos-actividades/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Adjuntos Actividade',
            ['adjuntos-actividades/create', 'AdjuntosActividade' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-AdjuntosActividades', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-AdjuntosActividades ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getAdjuntosActividades(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-adjuntosactividades']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'adjuntos-actividades' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'adjuntos-actividades'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->nombre, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->fullnameinverted, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_id',
    'value' => function ($model) {
        if ($rel = $model->getTipo()->one()) {
            return Html::a($rel->nombre, ['tipo-actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'bimestre_id',
    'value' => function ($model) {
        if ($rel = $model->getBimestre()->one()) {
            return Html::a($rel->nombre, ['bimestres/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'actividad_id',
    'value' => function ($model) {
        if ($rel = $model->getActividad()->one()) {
            return Html::a($rel->nombre, ['actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'estudiante_id',
    'value' => function ($model) {
        if ($rel = $model->getEstudiante()->one()) {
            return Html::a($rel->fullnameinverted, ['estudiantes/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('Asistencias'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Asistencias',
            ['asistencia/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Asistencia',
            ['asistencia/create', 'Asistencia' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-Asistencias', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-Asistencias ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getAsistencias(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-asistencias']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'asistencia' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'asistencia'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->nombre, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'periodo_id',
    'value' => function ($model) {
        if ($rel = $model->getPeriodo()->one()) {
            return Html::a($rel->nombre, ['periodos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->fullnameinverted, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'estudiante_id',
    'value' => function ($model) {
        if ($rel = $model->getEstudiante()->one()) {
            return Html::a($rel->fullnameinverted, ['estudiantes/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'estado_id',
    'value' => function ($model) {
        if ($rel = $model->getEstado()->one()) {
            return Html::a($rel->nombre, ['estado-asistencia/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'bimestre_id',
    'value' => function ($model) {
        if ($rel = $model->getBimestre()->one()) {
            return Html::a($rel->nombre, ['bimestres/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('CiclosTurnos'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Ciclos Turnos',
            ['ciclos-turnos/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Ciclos Turno',
            ['ciclos-turnos/create', 'CiclosTurno' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-CiclosTurnos', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-CiclosTurnos ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getCiclosTurnos(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-ciclosturnos']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'ciclos-turnos' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'ciclos-turnos'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'ciclo_id',
    'value' => function ($model) {
        if ($rel = $model->getCiclo()->one()) {
            return Html::a($rel->id, ['ciclos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'coord_admin_id',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('CiclosTurnosCursosParalelos'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Ciclos Turnos Cursos Paralelos',
            ['ciclos-turnos-cursos-paralelos/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Ciclos Turnos Cursos Paralelo',
            ['ciclos-turnos-cursos-paralelos/create', 'CiclosTurnosCursosParalelo' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-CiclosTurnosCursosParalelos', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-CiclosTurnosCursosParalelos ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getCiclosTurnosCursosParalelos(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-ciclosturnoscursosparalelos']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'ciclos-turnos-cursos-paralelos' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'ciclos-turnos-cursos-paralelos'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'ciclo_id',
    'value' => function ($model) {
        if ($rel = $model->getCiclo()->one()) {
            return Html::a($rel->nombre, ['ciclos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'paralelo_id',
    'value' => function ($model) {
        if ($rel = $model->getParalelo()->one()) {
            return Html::a($rel->nombre, ['paralelos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('CiclosTurnosProfesores'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Ciclos Turnos Profesores',
            ['ciclos-turnos-profesores/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Ciclos Turnos Profesore',
            ['ciclos-turnos-profesores/create', 'CiclosTurnosProfesore' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-CiclosTurnosProfesores', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-CiclosTurnosProfesores ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getCiclosTurnosProfesores(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-ciclosturnosprofesores']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'ciclos-turnos-profesores' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'ciclos-turnos-profesores'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'ciclo_id',
    'value' => function ($model) {
        if ($rel = $model->getCiclo()->one()) {
            return Html::a($rel->nombre, ['ciclos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->fullnameinverted, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('EstudiantesActividades'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Estudiantes Actividades',
            ['estudiantes-actividades/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Estudiantes Actividade',
            ['estudiantes-actividades/create', 'EstudiantesActividade' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-EstudiantesActividades', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-EstudiantesActividades ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getEstudiantesActividades(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-estudiantesactividades']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'estudiantes-actividades' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'estudiantes-actividades'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->nombre, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->fullnameinverted, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_id',
    'value' => function ($model) {
        if ($rel = $model->getTipo()->one()) {
            return Html::a($rel->nombre, ['tipo-actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'bimestre_id',
    'value' => function ($model) {
        if ($rel = $model->getBimestre()->one()) {
            return Html::a($rel->nombre, ['bimestres/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'actividad_id',
    'value' => function ($model) {
        if ($rel = $model->getActividad()->one()) {
            return Html::a($rel->nombre, ['actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'estudiante_id',
    'value' => function ($model) {
        if ($rel = $model->getEstudiante()->one()) {
            return Html::a($rel->fullnameinverted, ['estudiantes/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('Facturas'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Facturas',
            ['facturas/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Factura',
            ['facturas/create', 'Factura' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-Facturas', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-Facturas ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getFacturas(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-facturas']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'facturas' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'facturas'
],
        'id',
        'fecha',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'estudiante_id',
    'value' => function ($model) {
        if ($rel = $model->getEstudiante()->one()) {
            return Html::a($rel->fullnameinverted, ['estudiantes/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'paralelo_id',
    'value' => function ($model) {
        if ($rel = $model->getParalelo()->one()) {
            return Html::a($rel->nombre, ['paralelos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('FacturasDetalles'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Facturas Detalles',
            ['facturas-detalle/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Facturas Detalle',
            ['facturas-detalle/create', 'FacturasDetalle' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-FacturasDetalles', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-FacturasDetalles ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getFacturasDetalles(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-facturasdetalles']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'facturas-detalle' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'facturas-detalle'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'factura_id',
    'value' => function ($model) {
        if ($rel = $model->getFactura()->one()) {
            return Html::a($rel->id, ['facturas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'estudiante_id',
    'value' => function ($model) {
        if ($rel = $model->getEstudiante()->one()) {
            return Html::a($rel->fullnameinverted, ['estudiantes/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'paralelo_id',
    'value' => function ($model) {
        if ($rel = $model->getParalelo()->one()) {
            return Html::a($rel->nombre, ['paralelos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'cuota_id',
    'value' => function ($model) {
        if ($rel = $model->getCuota()->one()) {
            return Html::a($rel->nombre, ['cuotas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'cantidad',
        'monto',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('HorariosProfesores'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Horarios Profesores',
            ['horarios-profesores/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Horarios Profesore',
            ['horarios-profesores/create', 'HorariosProfesore' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-HorariosProfesores', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-HorariosProfesores ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getHorariosProfesores(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-horariosprofesores']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'horarios-profesores' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'horarios-profesores'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->nombre, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->fullnameinverted, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'periodo_id',
    'value' => function ($model) {
        if ($rel = $model->getPeriodo()->one()) {
            return Html::a($rel->nombre, ['periodos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'dia',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('PlanesDeClases'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Planes De Clases',
            ['planes-de-clases/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Planes De Clase',
            ['planes-de-clases/create', 'PlanesDeClase' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-PlanesDeClases', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-PlanesDeClases ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getPlanesDeClases(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-planesdeclases']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'planes-de-clases' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'planes-de-clases'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->fullnameinverted, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'paralelo_id',
    'value' => function ($model) {
        if ($rel = $model->getParalelo()->one()) {
            return Html::a($rel->nombre, ['paralelos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->nombre, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'hora',
        'dia',
        'objetivo',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('SistemaEvaluacions'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Sistema Evaluacions',
            ['sistema-evaluacion/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Sistema Evaluacion',
            ['sistema-evaluacion/create', 'SistemaEvaluacion' => ['turno_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-SistemaEvaluacions', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-SistemaEvaluacions ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getSistemaEvaluacions(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-sistemaevaluacions']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'sistema-evaluacion' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'sistema-evaluacion'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->nombre_abr, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->nombre, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->fullnameinverted, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_id',
    'value' => function ($model) {
        if ($rel = $model->getTipo()->one()) {
            return Html::a($rel->nombre, ['tipo-actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'porcentaje',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


    <?= Tabs::widget(
                 [
                     'id' => 'relation-tabs',
                     'encodeLabels' => false,
                     'items' => [ [
    'label'   => '<b class=""># '.$model->id.'</b>',
    'content' => $this->blocks['backend\models\Turnos'],
    'active'  => true,
],[
    'content' => $this->blocks['Actividades'],
    'label'   => '<small>Actividades <span class="badge badge-default">'.count($model->getActividades()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['AdjuntosActividades'],
    'label'   => '<small>Adjuntos Actividades <span class="badge badge-default">'.count($model->getAdjuntosActividades()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['Asistencias'],
    'label'   => '<small>Asistencias <span class="badge badge-default">'.count($model->getAsistencias()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['CiclosTurnos'],
    'label'   => '<small>Ciclos Turnos <span class="badge badge-default">'.count($model->getCiclosTurnos()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['CiclosTurnosCursosParalelos'],
    'label'   => '<small>Ciclos Turnos Cursos Paralelos <span class="badge badge-default">'.count($model->getCiclosTurnosCursosParalelos()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['CiclosTurnosProfesores'],
    'label'   => '<small>Ciclos Turnos Profesores <span class="badge badge-default">'.count($model->getCiclosTurnosProfesores()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['EstudiantesActividades'],
    'label'   => '<small>Estudiantes Actividades <span class="badge badge-default">'.count($model->getEstudiantesActividades()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['Facturas'],
    'label'   => '<small>Facturas <span class="badge badge-default">'.count($model->getFacturas()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['FacturasDetalles'],
    'label'   => '<small>Facturas Detalles <span class="badge badge-default">'.count($model->getFacturasDetalles()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['HorariosProfesores'],
    'label'   => '<small>Horarios Profesores <span class="badge badge-default">'.count($model->getHorariosProfesores()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['PlanesDeClases'],
    'label'   => '<small>Planes De Clases <span class="badge badge-default">'.count($model->getPlanesDeClases()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['SistemaEvaluacions'],
    'label'   => '<small>Sistema Evaluacions <span class="badge badge-default">'.count($model->getSistemaEvaluacions()->asArray()->all()).'</span></small>',
    'active'  => false,
], ]
                 ]
    );
    ?>
</div>

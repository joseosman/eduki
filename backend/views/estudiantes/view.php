<?php

use dmstr\helpers\Html;
use yii\helpers\Url;
use yii\grid\GridView;
use yii\widgets\DetailView;
use yii\widgets\Pjax;
use dmstr\bootstrap\Tabs;

/**
* @var yii\web\View $this
* @var backend\models\Estudiantes $model
*/
$copyParams = $model->attributes;

$this->title = Yii::t('backend', 'Estudiantes');
$this->params['breadcrumbs'][] = ['label' => Yii::t('backend', 'Estudiantes'), 'url' => ['index']];
$this->params['breadcrumbs'][] = ['label' => (string)$model->id, 'url' => ['view', 'id' => $model->id]];
$this->params['breadcrumbs'][] = Yii::t('backend', 'View');
?>
<div class="giiant-crud estudiantes-view">

    <!-- flash message -->
    <?php if (\Yii::$app->session->getFlash('deleteError') !== null) : ?>
        <span class="alert alert-info alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span></button>
            <?= \Yii::$app->session->getFlash('deleteError') ?>
        </span>
    <?php endif; ?>

    <h1>
        <?= Yii::t('backend', 'Estudiantes') ?>        <small>
            <?= $model->id ?>        </small>
    </h1>


    <div class="clearfix crud-navigation">

        <!-- menu buttons -->
        <div class='pull-left'>
            <?= Html::a(
            '<span class="glyphicon glyphicon-pencil"></span> ' . Yii::t('backend', 'Edit'),
            [ 'update', 'id' => $model->id],
            ['class' => 'btn btn-info']) ?>

            <?= Html::a(
            '<span class="glyphicon glyphicon-copy"></span> ' . Yii::t('backend', 'Copy'),
            ['create', 'id' => $model->id, 'Estudiantes'=>$copyParams],
            ['class' => 'btn btn-success']) ?>

            <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New'),
            ['create'],
            ['class' => 'btn btn-success']) ?>
        </div>

        <div class="pull-right">
            <?= Html::a('<span class="glyphicon glyphicon-list"></span> '
            . Yii::t('backend', 'Full list'), ['index'], ['class'=>'btn btn-default']) ?>
        </div>

    </div>

    <hr />

    <?php $this->beginBlock('backend\models\Estudiantes'); ?>

    
    <?= DetailView::widget([
    'model' => $model,
    'attributes' => [
            'id',
        'nombres',
        'ap_pat',
        'ap_mat',
        'fec_nac',
        'sex',
        'ruta_foto',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::attributeFormat
[
    'format' => 'html',
    'attribute' => 'pais_id',
    'value' => ($model->getPais()->one() ? Html::a($model->getPais()->one()->id, ['paises/view', 'id' => $model->getPais()->one()->id,]) : '<span class="label label-warning">?</span>'),
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::attributeFormat
[
    'format' => 'html',
    'attribute' => 'estado_id',
    'value' => ($model->getEstado()->one() ? Html::a($model->getEstado()->one()->id, ['estados/view', 'id' => $model->getEstado()->one()->id,]) : '<span class="label label-warning">?</span>'),
],
        'tipo_sangre',
        'email:email',
        'tel_fijo',
        'tel_movil',
        'tel_emergencia',
        'contacto_emergencia',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::attributeFormat
[
    'format' => 'html',
    'attribute' => 'user_id',
    'value' => ($model->getUser()->one() ? Html::a($model->getUser()->one()->id, ['user/view', 'id' => $model->getUser()->one()->id,]) : '<span class="label label-warning">?</span>'),
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::attributeFormat
[
    'format' => 'html',
    'attribute' => 'tipo_doc_id',
    'value' => ($model->getTipoDoc()->one() ? Html::a($model->getTipoDoc()->one()->id, ['tipo-documentos/view', 'id' => $model->getTipoDoc()->one()->id,]) : '<span class="label label-warning">?</span>'),
],
        'num_doc_id',
        'direcc',
        'fec_insc',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::attributeFormat
[
    'format' => 'html',
    'attribute' => 'religion_id',
    'value' => ($model->getReligion()->one() ? Html::a($model->getReligion()->one()->id, ['religiones/view', 'id' => $model->getReligion()->one()->id,]) : '<span class="label label-warning">?</span>'),
],
        'rude',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::attributeFormat
[
    'format' => 'html',
    'attribute' => 'curso_id',
    'value' => ($model->getCurso()->one() ? Html::a($model->getCurso()->one()->id, ['cursos/view', 'id' => $model->getCurso()->one()->id,]) : '<span class="label label-warning">?</span>'),
],
        'created_at',
        'created_by',
        'updated_at',
        'updated_by',
        'deleted',
    ],
    ]); ?>

    
    <hr/>

    <?= Html::a('<span class="glyphicon glyphicon-trash"></span> ' . Yii::t('backend', 'Delete'), ['delete', 'id' => $model->id],
    [
    'class' => 'btn btn-danger',
    'data-confirm' => '' . Yii::t('backend', 'Are you sure to delete this item?') . '',
    'data-method' => 'post',
    ]); ?>
    <?php $this->endBlock(); ?>


    
<?php $this->beginBlock('AdjuntosActividades'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Adjuntos Actividades',
            ['adjuntos-actividades/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Adjuntos Actividade',
            ['adjuntos-actividades/create', 'AdjuntosActividade' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-AdjuntosActividades', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-AdjuntosActividades ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getAdjuntosActividades(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-adjuntosactividades']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'adjuntos-actividades' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'adjuntos-actividades'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'ciclo_id',
    'value' => function ($model) {
        if ($rel = $model->getCiclo()->one()) {
            return Html::a($rel->id, ['ciclos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'turno_id',
    'value' => function ($model) {
        if ($rel = $model->getTurno()->one()) {
            return Html::a($rel->id, ['turnos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->id, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->id, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->id, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_id',
    'value' => function ($model) {
        if ($rel = $model->getTipo()->one()) {
            return Html::a($rel->id, ['tipo-actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'bimestre_id',
    'value' => function ($model) {
        if ($rel = $model->getBimestre()->one()) {
            return Html::a($rel->id, ['bimestres/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'actividad_id',
    'value' => function ($model) {
        if ($rel = $model->getActividad()->one()) {
            return Html::a($rel->id, ['actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('AntecedentesMedicos'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Antecedentes Medicos',
            ['antecedentes-medicos/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Antecedentes Medico',
            ['antecedentes-medicos/create', 'AntecedentesMedico' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-AntecedentesMedicos', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-AntecedentesMedicos ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getAntecedentesMedicos(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-antecedentesmedicos']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'antecedentes-medicos' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'antecedentes-medicos'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->id, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'administrativo_id',
    'value' => function ($model) {
        if ($rel = $model->getAdministrativo()->one()) {
            return Html::a($rel->id, ['administrativos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'enfermedades_conocidas',
        'alergias_conocidas',
        'transtornos_conocidos',
        'sindromes_conocidos',
        'medicamentos_continuos',
        'nombre_medico_cabecera',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('Asistencias'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Asistencias',
            ['asistencia/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Asistencia',
            ['asistencia/create', 'Asistencia' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-Asistencias', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-Asistencias ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getAsistencias(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-asistencias']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'asistencia' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'asistencia'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'ciclo_id',
    'value' => function ($model) {
        if ($rel = $model->getCiclo()->one()) {
            return Html::a($rel->id, ['ciclos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'turno_id',
    'value' => function ($model) {
        if ($rel = $model->getTurno()->one()) {
            return Html::a($rel->id, ['turnos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->id, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->id, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'periodo_id',
    'value' => function ($model) {
        if ($rel = $model->getPeriodo()->one()) {
            return Html::a($rel->id, ['periodos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->id, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'estado_id',
    'value' => function ($model) {
        if ($rel = $model->getEstado()->one()) {
            return Html::a($rel->id, ['estado-asistencia/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'bimestre_id',
    'value' => function ($model) {
        if ($rel = $model->getBimestre()->one()) {
            return Html::a($rel->id, ['bimestres/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('Becas'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Becas',
            ['becas/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Beca',
            ['becas/create', 'Beca' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-Becas', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-Becas ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getBecas(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-becas']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'becas' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'becas'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_beca_id',
    'value' => function ($model) {
        if ($rel = $model->getTipoBeca()->one()) {
            return Html::a($rel->id, ['tipo-becas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'created_at',
        'created_by',
        'updated_at',
        'updated_by',
        'deleted',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('BecasDetalles'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Becas Detalles',
            ['becas-detalle/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Becas Detalle',
            ['becas-detalle/create', 'BecasDetalle' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-BecasDetalles', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-BecasDetalles ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getBecasDetalles(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-becasdetalles']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'becas-detalle' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'becas-detalle'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'beca_id',
    'value' => function ($model) {
        if ($rel = $model->getBeca()->one()) {
            return Html::a($rel->id, ['becas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_beca_id',
    'value' => function ($model) {
        if ($rel = $model->getTipoBeca()->one()) {
            return Html::a($rel->id, ['tipo-becas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_cuota_id',
    'value' => function ($model) {
        if ($rel = $model->getTipoCuota()->one()) {
            return Html::a($rel->id, ['tipo-cuotas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'descuento',
        'numero_cuotas',
        'created_at',
        'created_by',
        'updated_at',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('Cuotas'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Cuotas',
            ['cuotas/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Cuota',
            ['cuotas/create', 'Cuota' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-Cuotas', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-Cuotas ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getCuotas(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-cuotas']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'cuotas' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'cuotas'
],
        'id',
        'nombre',
        'descripcion',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_cuota_id',
    'value' => function ($model) {
        if ($rel = $model->getTipoCuota()->one()) {
            return Html::a($rel->id, ['tipo-cuotas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'frecuencia_id',
    'value' => function ($model) {
        if ($rel = $model->getFrecuencia()->one()) {
            return Html::a($rel->id, ['frecuencia-cuotas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'descuento',
        'created_at',
        'created_by',
        'updated_at',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('EstudiantesActividades'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Estudiantes Actividades',
            ['estudiantes-actividades/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Estudiantes Actividade',
            ['estudiantes-actividades/create', 'EstudiantesActividade' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-EstudiantesActividades', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-EstudiantesActividades ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getEstudiantesActividades(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-estudiantesactividades']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'estudiantes-actividades' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'estudiantes-actividades'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'ciclo_id',
    'value' => function ($model) {
        if ($rel = $model->getCiclo()->one()) {
            return Html::a($rel->id, ['ciclos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'turno_id',
    'value' => function ($model) {
        if ($rel = $model->getTurno()->one()) {
            return Html::a($rel->id, ['turnos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->id, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'materia_id',
    'value' => function ($model) {
        if ($rel = $model->getMateria()->one()) {
            return Html::a($rel->id, ['materias/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->id, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_id',
    'value' => function ($model) {
        if ($rel = $model->getTipo()->one()) {
            return Html::a($rel->id, ['tipo-actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'bimestre_id',
    'value' => function ($model) {
        if ($rel = $model->getBimestre()->one()) {
            return Html::a($rel->id, ['bimestres/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'actividad_id',
    'value' => function ($model) {
        if ($rel = $model->getActividad()->one()) {
            return Html::a($rel->id, ['actividades/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('Facturas'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Facturas',
            ['facturas/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Factura',
            ['facturas/create', 'Factura' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-Facturas', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-Facturas ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getFacturas(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-facturas']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'facturas' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'facturas'
],
        'id',
        'fecha',
        'fecha_vence',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'ciclo_id',
    'value' => function ($model) {
        if ($rel = $model->getCiclo()->one()) {
            return Html::a($rel->id, ['ciclos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'turno_id',
    'value' => function ($model) {
        if ($rel = $model->getTurno()->one()) {
            return Html::a($rel->id, ['turnos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->id, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'paralelo_id',
    'value' => function ($model) {
        if ($rel = $model->getParalelo()->one()) {
            return Html::a($rel->id, ['paralelos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'created_at',
        'created_by',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('FacturasDetalles'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Facturas Detalles',
            ['facturas-detalle/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Facturas Detalle',
            ['facturas-detalle/create', 'FacturasDetalle' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-FacturasDetalles', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-FacturasDetalles ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getFacturasDetalles(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-facturasdetalles']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'facturas-detalle' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'facturas-detalle'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'factura_id',
    'value' => function ($model) {
        if ($rel = $model->getFactura()->one()) {
            return Html::a($rel->id, ['facturas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'ciclo_id',
    'value' => function ($model) {
        if ($rel = $model->getCiclo()->one()) {
            return Html::a($rel->id, ['ciclos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'turno_id',
    'value' => function ($model) {
        if ($rel = $model->getTurno()->one()) {
            return Html::a($rel->id, ['turnos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'curso_id',
    'value' => function ($model) {
        if ($rel = $model->getCurso()->one()) {
            return Html::a($rel->id, ['cursos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'paralelo_id',
    'value' => function ($model) {
        if ($rel = $model->getParalelo()->one()) {
            return Html::a($rel->id, ['paralelos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'cuota_id',
    'value' => function ($model) {
        if ($rel = $model->getCuota()->one()) {
            return Html::a($rel->id, ['cuotas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'cantidad',
        'monto',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('Hijos'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Hijos',
            ['hijos/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Hijo',
            ['hijos/create', 'Hijo' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-Hijos', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-Hijos ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getHijos(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-hijos']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'hijos' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'hijos'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'padre_id',
    'value' => function ($model) {
        if ($rel = $model->getPadre()->one()) {
            return Html::a($rel->id, ['padres/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'created_at',
        'created_by',
        'updated_at',
        'updated_by',
        'deleted',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('HistorialMedicos'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Historial Medicos',
            ['historial-medico/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Historial Medico',
            ['historial-medico/create', 'HistorialMedico' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-HistorialMedicos', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-HistorialMedicos ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getHistorialMedicos(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-historialmedicos']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'historial-medico' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'historial-medico'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->id, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'administrativo_id',
    'value' => function ($model) {
        if ($rel = $model->getAdministrativo()->one()) {
            return Html::a($rel->id, ['administrativos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'grados_temp',
        'presion_sistolica',
        'presion_diastolica',
        'sintomas',
        'antecedente_sintomas',
        'diagnostico',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('IdiomasEstudiantes'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Idiomas Estudiantes',
            ['idiomas-estudiantes/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Idiomas Estudiante',
            ['idiomas-estudiantes/create', 'IdiomasEstudiante' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-IdiomasEstudiantes', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-IdiomasEstudiantes ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getIdiomasEstudiantes(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-idiomasestudiantes']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'idiomas-estudiantes' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'idiomas-estudiantes'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'idioma_id',
    'value' => function ($model) {
        if ($rel = $model->getIdioma()->one()) {
            return Html::a($rel->id, ['idiomas/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'created_at',
        'created_by',
        'updated_at',
        'updated_by',
        'deleted',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('LibrosPrestamos'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Libros Prestamos',
            ['libros-prestamos/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Libros Prestamo',
            ['libros-prestamos/create', 'LibrosPrestamo' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-LibrosPrestamos', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-LibrosPrestamos ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getLibrosPrestamos(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-librosprestamos']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'libros-prestamos' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'libros-prestamos'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'libro_id',
    'value' => function ($model) {
        if ($rel = $model->getLibro()->one()) {
            return Html::a($rel->id, ['libros/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->id, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'administrativo_id',
    'value' => function ($model) {
        if ($rel = $model->getAdministrativo()->one()) {
            return Html::a($rel->id, ['administrativos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'fecha_retiro',
        'fecha_plazo',
        'fecha_retorno',
        'multa',
        'devuelto',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('LlamadasAtencions'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Llamadas Atencions',
            ['llamadas-atencion/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Llamadas Atencion',
            ['llamadas-atencion/create', 'LlamadasAtencion' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-LlamadasAtencions', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-LlamadasAtencions ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getLlamadasAtencions(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-llamadasatencions']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'llamadas-atencion' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'llamadas-atencion'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'tipo_llamada_id',
    'value' => function ($model) {
        if ($rel = $model->getTipoLlamada()->one()) {
            return Html::a($rel->id, ['tipo-llamada-atencion/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'profesor_id',
    'value' => function ($model) {
        if ($rel = $model->getProfesor()->one()) {
            return Html::a($rel->id, ['profesores/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'administrativo_id',
    'value' => function ($model) {
        if ($rel = $model->getAdministrativo()->one()) {
            return Html::a($rel->id, ['administrativos/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'fecha',
        'explicacion',
        'created_at',
        'created_by',
        'updated_at',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


<?php $this->beginBlock('TransporteDetalles'); ?>
<div style='position: relative'><div style='position:absolute; right: 0px; top: 0px;'>
  <?= Html::a(
            '<span class="glyphicon glyphicon-list"></span> ' . Yii::t('backend', 'List All') . ' Transporte Detalles',
            ['transporte-detalle/index'],
            ['class'=>'btn text-muted btn-xs']
        ) ?>
  <?= Html::a(
            '<span class="glyphicon glyphicon-plus"></span> ' . Yii::t('backend', 'New') . ' Transporte Detalle',
            ['transporte-detalle/create', 'TransporteDetalle' => ['estudiante_id' => $model->id]],
            ['class'=>'btn btn-success btn-xs']
        ); ?>
</div></div><?php Pjax::begin(['id'=>'pjax-TransporteDetalles', 'enableReplaceState'=> false, 'linkSelector'=>'#pjax-TransporteDetalles ul.pagination a, th a', 'clientOptions' => ['pjax:success'=>'function(){alert("yo")}']]) ?>
<?= '<div class="table-responsive">' . \yii\grid\GridView::widget([
    'layout' => '{summary}{pager}<br/>{items}{pager}',
    'dataProvider' => new \yii\data\ActiveDataProvider(['query' => $model->getTransporteDetalles(), 'pagination' => ['pageSize' => 20, 'pageParam'=>'page-transportedetalles']]),
    'pager'        => [
        'class'          => yii\widgets\LinkPager::className(),
        'firstPageLabel' => Yii::t('backend', 'First'),
        'lastPageLabel'  => Yii::t('backend', 'Last')
    ],
    'columns' => [[
    'class'      => 'yii\grid\ActionColumn',
    'template'   => '{view} {update}',
    'contentOptions' => ['nowrap'=>'nowrap'],
    'urlCreator' => function ($action, $model, $key, $index) {
        // using the column name as key, not mapping to 'id' like the standard generator
        $params = is_array($key) ? $key : [$model->primaryKey()[0] => (string) $key];
        $params[0] = 'transporte-detalle' . '/' . $action;
        return $params;
    },
    'buttons'    => [
        
    ],
    'controller' => 'transporte-detalle'
],
        'id',
// generated by schmunk42\giiant\generators\crud\providers\RelationProvider::columnFormat
[
    'class' => yii\grid\DataColumn::className(),
    'attribute' => 'transporte_id',
    'value' => function ($model) {
        if ($rel = $model->getTransporte()->one()) {
            return Html::a($rel->id, ['transporte/view', 'id' => $rel->id,], ['data-pjax' => 0]);
        } else {
            return '';
        }
    },
    'format' => 'raw',
],
        'created_at',
        'created_by',
        'updated_at',
        'updated_by',
        'deleted',
]
]) . '</div>' ?>
<?php Pjax::end() ?>
<?php $this->endBlock() ?>


    <?= Tabs::widget(
                 [
                     'id' => 'relation-tabs',
                     'encodeLabels' => false,
                     'items' => [ [
    'label'   => '<b class=""># '.$model->id.'</b>',
    'content' => $this->blocks['backend\models\Estudiantes'],
    'active'  => true,
],[
    'content' => $this->blocks['AdjuntosActividades'],
    'label'   => '<small>Adjuntos Actividades <span class="badge badge-default">'.count($model->getAdjuntosActividades()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['AntecedentesMedicos'],
    'label'   => '<small>Antecedentes Medicos <span class="badge badge-default">'.count($model->getAntecedentesMedicos()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['Asistencias'],
    'label'   => '<small>Asistencias <span class="badge badge-default">'.count($model->getAsistencias()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['Becas'],
    'label'   => '<small>Becas <span class="badge badge-default">'.count($model->getBecas()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['BecasDetalles'],
    'label'   => '<small>Becas Detalles <span class="badge badge-default">'.count($model->getBecasDetalles()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['Cuotas'],
    'label'   => '<small>Cuotas <span class="badge badge-default">'.count($model->getCuotas()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['EstudiantesActividades'],
    'label'   => '<small>Estudiantes Actividades <span class="badge badge-default">'.count($model->getEstudiantesActividades()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['Facturas'],
    'label'   => '<small>Facturas <span class="badge badge-default">'.count($model->getFacturas()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['FacturasDetalles'],
    'label'   => '<small>Facturas Detalles <span class="badge badge-default">'.count($model->getFacturasDetalles()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['Hijos'],
    'label'   => '<small>Hijos <span class="badge badge-default">'.count($model->getHijos()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['HistorialMedicos'],
    'label'   => '<small>Historial Medicos <span class="badge badge-default">'.count($model->getHistorialMedicos()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['IdiomasEstudiantes'],
    'label'   => '<small>Idiomas Estudiantes <span class="badge badge-default">'.count($model->getIdiomasEstudiantes()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['LibrosPrestamos'],
    'label'   => '<small>Libros Prestamos <span class="badge badge-default">'.count($model->getLibrosPrestamos()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['LlamadasAtencions'],
    'label'   => '<small>Llamadas Atencions <span class="badge badge-default">'.count($model->getLlamadasAtencions()->asArray()->all()).'</span></small>',
    'active'  => false,
],[
    'content' => $this->blocks['TransporteDetalles'],
    'label'   => '<small>Transporte Detalles <span class="badge badge-default">'.count($model->getTransporteDetalles()->asArray()->all()).'</span></small>',
    'active'  => false,
], ]
                 ]
    );
    ?>
</div>
